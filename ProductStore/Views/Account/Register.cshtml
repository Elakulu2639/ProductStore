@model ProductStore.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title text-center mb-0">Create Account</h3>
                    <p class="text-center mb-0">Join our community today</p>
                </div>
                <div class="card-body p-4">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.FirstName, new { @class = "form-label fw-bold" })
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <i class="fas fa-user"></i>
                                        </span>
                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control form-control-lg", placeholder = "Enter first name" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.LastName, new { @class = "form-label fw-bold" })
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <i class="fas fa-user"></i>
                                        </span>
                                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control form-control-lg", placeholder = "Enter last name" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-4">
                            @Html.LabelFor(m => m.Email, new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-envelope"></i>
                                </span>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", placeholder = "Enter your email" })
                            </div>
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-4">
                            @Html.LabelFor(m => m.Password, new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-lock"></i>
                                </span>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg", placeholder = "Create password", id = "Password" })
                                <button type="button" class="btn btn-outline-secondary toggle-password">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-4">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-lock"></i>
                                </span>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-control-lg", placeholder = "Confirm password", id = "ConfirmPassword" })
                                <button type="button" class="btn btn-outline-secondary toggle-password">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg shadow">
                                <i class="fas fa-user-plus me-2"></i>Create Account
                            </button>
                        </div>

                        <div class="text-center mt-4">
                            <p class="mb-0">
                                Already have an account?
                                @Html.ActionLink("Login here", "Login", "Account", null, new { @class = "text-decoration-none fw-bold" })
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password toggle functionality
            document.querySelectorAll('.toggle-password').forEach(function(button) {
                button.addEventListener('click', function() {
                    const inputId = this.parentElement.querySelector('input').id;
                    const passwordInput = document.querySelector(`#${inputId}`);
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);
                    this.querySelector('i').classList.toggle('fa-eye');
                    this.querySelector('i').classList.toggle('fa-eye-slash');
                });
            });
        });
    </script>
}